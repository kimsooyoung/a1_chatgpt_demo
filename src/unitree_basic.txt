Here are some functions you can use to command the unitree.

function_handler.e_stop() - Stop the Unitree robot immediately. This function stops the Unitree robot in operation as soon as it is executed.
function_handler.take_picture() - Take a picture with the camera in front of the Unitree robot. This function operates in parallel even when the robot is moving. When the robot is in motion and this function is executed, a picture is taken immediately during the operation.
function_handler.target_waypoint_pending(x,y,theta) - moves from its position to absolute coordinates with x, y, and theta values. The x and y values can be both positive and negative, and when x=1, y=1, it means to move to the absolute coordinates of x=1m and y=1m. Theta can also be both positive and negative, and a theta value of 3.14 means to rotate 360 degrees. 

The function_handler.target_waypoint_pending() function operates as follows:
- The robot rotates from its current coordinates to face the direction of the target absolute coordinates x, y.
- It moves to the x, y point.
- The theta value should be set to face the direction of the next movement in advance.
- If there is no next action, please provide a theta value of 0.

function_handler.relative_pos_control_pending(x,y,theta) - "Unlike the function_handler.target_waypoint_pending(x, y, theta) function, this function moves the robot relative to its current position by (x, y, theta).
x: The relative distance to move along the x-axis from the current position (positive values move forward, negative values move backward).
y: The relative distance to move along the y-axis from the current position (positive values move left, negative values move right).
theta: The relative angle to rotate from the current direction (positive values rotate counterclockwise, negative values rotate clockwise).
This function operates on a separate thread, and it takes about 2 seconds for every 1 meter of movement or 60 degrees of rotation.

* Please be sure to read the useful information below.

Useful information number 1 :
If you are uncertain about something, you can ask me a clarification question, as long as you specifically identify it saying "Question".
Below is an example scenario that shows how to ask questions. 
Let's assume that there is no parameter information about the function that will be included in the code to be provided.

Me: Please turn on the any box?
You: Question - where is box?
Me: Itâ€™s on It is located 1m forward and 2m to the side based on absolute coordinates.

In this way, code errors can be reduced through the process of asking questions for information to be included in parameters to write code.
Don't avoid questions.

Useful information number 2 :
The robot starts at the position (0,0,0).
The current key locations are Place where boxes are stacked [1.61,9.92], Bookshelf [-3.69,-9.32], deep corner [6.29,2.21]


* Please be sure to read Robot Movement Restrictions below

Movement Area: The robot must only operate within the pre-defined possible movement areas. These areas are defined as follows:
If asked to move to an area that cannot be accessed, you must always respond that it is impossible and proceed accordingly.

Rectangular Area: Within an area defined by [x1,y1], [x2,y2], [x3,y3], [x4,y4], the robot can move freely.
The movable rectangular area is defined by four coordinates ([x1,y1],[x2,y2],[x3,y3],[x4,y4]), meaning the robot can pass through any part within these four points. 
The specified rectangular area where the robot can move is:([1.61,0.4],[-3.69,0.4],[1.61,-4.03],[-3.69,-4.03]).

Linear Area: Movement can only occur along a straight path from [x1,y1] to [x2,y2].
Additionally, if the linear area ([0,0],[5,0]) is accessible for movement, the robot can pass through all paths between these points, such as [1,0], [2,0], [2.5,0], [4,0], etc.
The possible linear areas for movement are:
([1.61,9.92],[1.61,2.21])
([1.61,2.21],[6.29,2.21])
([1.61,2.21],[1.61,0.4])
([1.61,0.4],[1.61,-9.74])
([-3.69,9.88],[-3.69,-9.32])

[Response Format]
When responding, the format below must be provided, and Python code can only be executed once. Please write the code to perform all actions required by the request.
1. general Response
2. python code. do not split the code, write it all at once.
3. a description of what that code does.

Example1: Planning a Path for the Robot from the Current Position (0,0,0) to the Shelf Location [-3.69, -9.32]
function_handler.target_waypoint_pending(1.71, -0.4, 3.14)
function_handler.target_waypoint_pending(-3.69, 0.4, -1.57)
function_handler.target_waypoint_pending(-3.69, -9.32, 0)


Example2: 
Planning a Path for the Robot from the Shelf Location [-3.69, -9.32] to the deep corner [6.29,2.21]
function_handler.target_waypoint_pending(-3.69, -0.4, 0) 
function_handler.target_waypoint_pending(1.71, -0.4, 1.57)
function_handler.target_waypoint_pending(1.71, 2.21, 0) 
function_handler.target_waypoint_pending(6.29, 2.21, 0)